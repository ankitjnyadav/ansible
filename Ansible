How To Install Ansible:
https://docs.ansible.com/ansible/latest/installation_guide/intro_installation.html

Ansible is simple open source IT engine which automates application deployment, intra service orchestration,
cloud provisioning and many other IT tools.

Ansible is easy to deploy because it does not use any agents or custom security infrastructure.

Ansible uses playbook to describe automation jobs, and playbook uses very simple language i.e.
YAML (It’s a human-readable data serialization language & is commonly used for configuration files,
but could be used in many applications where data is being stored)which is very easy for humans to understand,
read and write. Hence the advantage is that even the IT infrastructure support guys can read and
understand the playbook and debug if needed (YAML – It is in human readable form).

Ansible is designed for multi-tier deployment. Ansible does not manage one system at time,
it models IT infrastructure by describing all of your systems are interrelated.
Ansible is completely agentless which means Ansible works by connecting your nodes through ssh(by default).
But if you want other method for connection like Kerberos, Ansible gives that option to you.

After connecting to your nodes, Ansible pushes small programs called as “Ansible Modules”.
Ansible runs that modules on your nodes and removes them when finished.
Ansible manages your inventory in simple text files (These are the hosts file).
Ansible uses the hosts file where one can group the hosts and can control the actions on a specific group in the playbooks.

ansible --version
ansible 2.9.11
  config file = /etc/ansible/ansible.cfg
  configured module search path = [u'/home/ay/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python2.7/dist-packages/ansible
  executable location = /usr/bin/ansible
  python version = 2.7.17 (default, Jul 20 2020, 15:37:01) [GCC 7.5.0]

Ansible uses "Python" behind the scenes. It is built on top of Py.

To list all the hosts of Ansible
ansible all --list-hosts

Ansible Configuration File:
config file = /etc/ansible/ansible.cfg


Ansible - work on Push mechanism
Puppet & Chef - work on Pull mechanism.

Ansible doesnt requires any agent.

Inventory is like DB of IP Adderess
After adding the IPs in the config file
---------------------------------------
ansible all --list-hosts
---------------------------------------
  hosts (2):
    192.168.31.137
    192.168.31.100
---------------------------------------

ansible all -m package -a "name=filezilla state=install"

internally it uses SSH to connect and perform the operations
To SSH, it requires IP, username & password

In inventorty file

192.168.31.162  ansible_ssh_user=root ansible_ssh_pass=password

We need to install "sshpass" as well.

------------------------------------------------------
192.168.31.56 | FAILED! => {
    "msg": "Using a SSH password instead of a key is not possible because Host Key checking is enabled and sshpass does not support this.  Please add this host's fingerprint to your known_hosts file to manage this host."
}
------------------------------------------------------
[defaults]
host_key_checking = false
------------------------------------------------------

ansible all -m package -a "name=firefox state=present"
------------------------------------------------------
192.168.31.56 | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/libexec/platform-python"
    },
    "changed": false,
    "msg": "Nothing to do",
    "rc": 0,
    "results": []
}



---------------------------------------------------
How to setup/configure the webserver using Ansible:
---------------------------------------------------

step1:
what: install software apache web server "httpd"

$ ansible -m package -a httpd install

""""know OS: redhat 8""""
""""how #yum install httpd""""

intelligence comes from module

module: package

step2:
what: copy webpage/website from home.html to /var/www/html
#ansible -m copy "src=home.html dest=/var/www/html"


step3:
what: start web server program/service/deamon: "httpd"
how: manual #systemctl start httpd
#ansible -m service -a "name=httpd state=started"

Ansible is not language its a tool.

Ansible Playbook


How to run the Ansible playbook
$ ansible-playbook <playbook-filename>.yml

ansible all -m ping

[group_name]
192.168.0.1
192.168.0.2
192.168.0.3

-host: web
 vars:
 - package_name: "httpd"
 - other: {{other_name}}
 task:
 - package:
     name:  "httpd"
     state: present
 - copy:
     #src: "home.html"
     content: "This is my data and package name is {{package_name}}\n"
     dest: "/var/www/html"
 - debug:
   var: package_name


ansible-playbook -e other_name=ay

Jinja framework
Jinja2

Whatever we need to do Ansible has module. That makes it intelligent.

Exception handling--

ignore_erros: yes

ansible group_name -m ping

Ansible is all about:

What to do
It take cares of how to do 

Ansible create a layer inbetween, which is abstractions
Resources Abstraction Layer (RAL). hides underlying OS commands.


dns.conf
nameserver 192.168.0.1

- hosts: all
  vars:
	- dnsip: 192.168.0.1
  tasks:
  - copy:
	src: dsn.conf
	dest: /etc/resolv.conf

dns.conf
nameserver {{ dnsip }}


Facts are the live(runtime) information about the OS

ansible all -m ping

ansible --version

cat /etc/ansible/ansible.cfg
cat /etc/myhosts.txt



- hosts: all
  tasks:
	- package:
		name: "httpd"
		state: "present"



- hosts: all
  vars:
	x: "AY"
  task:
  - debug: 
	var: ansible_os_family
  - debug: 
	msg: "My of name is : {{ ansible_os_family }}"




ansible 192.168.0.162 -m setup
Retrives all the information of  that particular node

Step 1
What to do # yum configure, url for docker software: module


Step2:
Install the docker software

Step3: Service start: docker
module: service

Step4: Get Pip3 cmd: software: python36

Step5: install python lib: docker-py

Step 6: image download 
module: docker_image



- hosts: dockerhost
  gather_facts: false
  tasks:
   - name: conf yum for docker
     yum_repository:
       name: dockerrepo
       baseurl: https://download.docker.com/linux/centos/7/x86_64/stable
       description: This is repo of our docker yum configuration
       enabled: true
       gpgcheck: no
     
   - name: Install docker for RedHat
     command: "yum install docker-ce -y --nobest"
	#Command doesnt work with Idempotance

   - name: Install Python
     package:
       name: "python36"
       state: present

   - name: Install python library
     pip:
       name: docker-py

   - name: Start docker srevice
     service:
       name: "docker"
       state: started
       enabled: true   

   - name: Install docker
     docker_image:
       name: ubuntu:14.04
       source: pull

   - name: run container
     docker_container:
       name: myos_1
       image: ubuntu:14.04

































































































